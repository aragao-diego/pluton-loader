(function(){
'use strict'
function createSubModules(element,index,array){var subModuleName=moduleName+"."+element;angular.module(subModuleName,[]),array[index]=subModuleName}function configLoader($ocLazyLoadProvider){$ocLazyLoadProvider.config({modules:[{name:"da-loader",serie:!0,files:["bower_components/da-loader/dist/da-loader.css","bower_components/da-loader/dist/da-loader.html"]}]})}function LoaderController($controller){}function LoaderUiRouterController($rootScope,LoaderService){var vm=this;return vm}function LoaderUiRouterController($rootScope,LoaderService){function config(){$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){LoaderService.enable()}),$rootScope.$on("$stateChangeError",function(event,toState,toParams,fromState,fromParams,error){LoaderService.disable()}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){LoaderService.disable()}),$rootScope.$on("$stateNotFound",function(event,unfoundState,fromState,fromParams){LoaderService.disable()})}var vm={config:config};return vm}function LoaderDirective($rootScope,LoaderService){function compile(element,attrs,transclude){return{pre:preLink,post:postLink}}function preLink($scope,element,attrs,controller){attrs.controller||(attrs.controller="LoaderUiRouterController")}function postLink($scope,element,attrs,controller){$scope.displayStatus=LoaderService.isActive()?"block":"none",$scope.$watch(function(){return LoaderService.isActive()},function(newValue){$scope.displayStatus=LoaderService.isActive()?"block":"none"})}return{scope:{},controller:"@",name:"controller",restrict:"AE",templateUrl:"da-loader/loader.html",replace:!0,compile:compile}}function LoaderService($state){function enable(){service.isShowing=!0}function disable(){service.isShowing=!1}function toggle(){service.isShowing=!service.isShowing}function isActive(){return service.isShowing}var isShowing=!1,service={isShowing:isShowing,enable:enable,disable:disable,toggle:toggle,isActive:isActive};return service}function viewConfig($templateCache){}var moduleName="da-loader",subModules=["controllers","directives","services","views"];subModules.forEach(createSubModules),angular.module(moduleName,["ui.router","oc.lazyLoad"].concat(subModules)),configLoader.$inject=["$ocLazyLoadProvider"],angular.module("da-loader").config(configLoader),LoaderController.$inject=["$controller"],angular.module("da-loader.controllers").controller("LoaderController",LoaderController),LoaderUiRouterController.$inject=["$rootScope","LoaderService"],angular.module("da-loader.controllers").controller("LoaderNgRouterController",LoaderUiRouterController),LoaderUiRouterController.$inject=["$rootScope","LoaderService"],angular.module("da-loader.controllers").controller("LoaderUiRouterController",LoaderUiRouterController),LoaderDirective.$inject=["$rootScope","LoaderService"],angular.module("da-loader.directives").directive("daLoader",LoaderDirective),LoaderService.$inject=["$state"],angular.module("da-loader.services").service("LoaderService",LoaderService),viewConfig.$inject=["$templateCache"],angular.module("da-loader.views").run(viewConfig);
})();