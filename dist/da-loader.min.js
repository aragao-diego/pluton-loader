(function(){
'use strict'
function createSubModules(element,index,array){var moduleName=module+element;angular.module(moduleName,[]),array[index]=moduleName}function configDaLoader($ocLazyLoadProvider){$ocLazyLoadProvider.config({modules:[{name:"da-loader",files:["bower_components/da-loader/dist/da-loader.html","bower_components/da-loader/dist/da-loader.css"]}]})}function DaLoaderController($scope){}function LoaderDirective($rootScope,LoaderService){return{restrict:"AE",templateUrl:"id-loader/loader.html",replace:!0,link:function($scope,element,attrs,controller){$scope.displayStatus=function(){return LoaderService.status()?"block":"none"},$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){LoaderService.show(),console.log("$stateChangeStart")}),$rootScope.$on("$stateChangeError",function(event,toState,toParams,fromState,fromParams,error){LoaderService.hide(),console.log("$stateChangeError")}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){LoaderService.hide(),console.log("$stateChangeSuccess")}),$rootScope.$on("$stateNotFound",function(event,unfoundState,fromState,fromParams){LoaderService.hide(),console.log("$stateNotFound")})}}}function LoaderService($state){function show(){service.isShowing=!0}function hide(){service.isShowing=!1}function toggle(){service.isShowing=!service.isShowing}function status(){return service.isShowing}var isShowing=!1,service={isShowing:isShowing,show:show,hide:hide,toggle:toggle,status:status};return service}function viewConfig($templateCache){$templateCache.put("da-loader/loader.html",'<div class="da-loader" ng-style="{\'display\': displayStatus()}"></div>')}var subModules=["controllers","directives","services","views"];subModules.forEach(createSubModules);var module="da-loader";angular.module(module,["ui.router","oc.lazyLoad"].concat(subModules)),configDaLoader.$inject=["$ocLazyLoadProvider"],angular.module("da-loader").config(configDaLoader),DaLoaderController.$inject=["$scope"],angular.module("da-loader").controller("daLoaderController",DaLoaderController),LoaderDirective.$inject=["$rootScope","LoaderService"],angular.module("da-loader").directive("daLoader",LoaderDirective),LoaderService.$inject=["$state"],angular.module("da-loader").service("LoaderService",LoaderService),viewConfig.$inject=["$templateCache"],angular.module("da-loader").run(viewConfig);
})();